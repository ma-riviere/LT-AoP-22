```{r}
#| echo: false
#| output: false

source(here::here("src", "init.R"), echo = FALSE)

current_data <- insight::get_data(mod)

is_inter <- stringr::str_detect(pred, pattern = ":")

if (is_inter) {
  inter_preds <- stringr::str_split(pred, pattern = ":")  |> purrr::flatten_chr()
  time <- setdiff(inter_preds, "Condition")[1]
  
  plot_width <- 2.5 + purrr::reduce(inter_preds, \(acc, c) acc * n_distinct(data[[c]]), .init = 1)
  
  emmeans_formula <- paste0("~ ", paste(inter_preds, collapse = " | ")) |> as.formula()
} else {
  plot_width <- 2.5 + (n_distinct(data[[pred]]))
}
```

##### `r pred`

❖ **Marginal Means:**

```{r}
#| eval: false
#| echo: !expr (!is_inter)

emmeans(mod, specs = pred, type = "response")
```

```{r}
#| eval: !expr (!is_inter)
#| echo: false
#| output: asis

emm <- emmeans(mod, specs = pred, type = "response")

as.data.frame(emm) |> gt::gt()
```

```{r}
#| eval: !expr (!is_inter)
#| echo: false

paste0("- ", summary(emm) |> attr("mesg")) |> cat(sep = "\n")
```

<!--[ For interactions ]--->

```{r}
#| eval: false
#| echo: !expr is_inter

emmeans(mod, specs = emmeans_formula, type = "response")
```

```{r}
#| eval: !expr is_inter
#| echo: false
#| output: asis

emm_inter <- emmeans(mod, specs = emmeans_formula, type = "response")

cat("::: {.panel-tabset}\n\n") # TODO: group="facet"

as.data.frame(emm_inter) |> 
  group_by(.data[[time]]) |> 
  group_map(
    \(d, g) {
      txt <- glue("\n###### `r as.character(g[[time]])`\n\n```{r}\n#| output: asis\n#| echo: false\n\ngt::gt(d)\n```\n\n", .open = "<<", .close = ">>")
      knitr::knit_child(text = txt, envir = new.env(parent = environment()), quiet = TRUE)
    }
  ) |> unlist() |> cat(sep = '\n')

cat(":::\n")
```

```{r}
#| eval: !expr is_inter
#| echo: false

paste0("- ", summary(emm_inter) |> attr("mesg")) |> cat(sep = "\n")
```


❖ **Contrasts:**

```{r}
#| eval: false
#| echo: !expr (!is_inter)

emmeans(mod, specs = pred, type = "response") |> 
  contrast(method = "consec", adjust = "none", infer = TRUE)
```

```{r}
#| eval: !expr (!is_inter)
#| echo: false
#| output: asis

cont <- emmeans(mod, specs = pred, type = "response") |> 
  contrast(method = "consec", adjust = "none", infer = TRUE)

as.data.frame(cont) |> gt::gt()
```

```{r}
#| eval: !expr (!is_inter)
#| echo: false

paste0("- ", summary(cont) |> attr("mesg")) |> cat(sep = "\n")
```

<!--[ For interactions ]--->

```{r}
#| eval: false
#| echo: !expr is_inter

emmeans(mod, specs = emmeans_formula, type = "response") |> 
  contrast(method = "pairwise", adjust = "none", infer = TRUE)
```

```{r}
#| eval: !expr is_inter
#| echo: false
#| output: asis

cont_inter <- emmeans(mod, specs = emmeans_formula, type = "response") |> 
  contrast(method = "pairwise", adjust = "none", infer = TRUE)

cat("::: {.panel-tabset}\n\n") # TODO: group="facet"

as.data.frame(cont_inter) |> 
  group_by(.data[[time]]) |> 
  group_map(
    \(d, g) {
      txt <- glue("\n###### `r as.character(g[[time]])`\n\n```{r}\n#| output: asis\n#| echo: false\n\ngt::gt(d)\n```\n\n", .open = "<<", .close = ">>")
      knitr::knit_child(text = txt, envir = new.env(parent = environment()), quiet = TRUE)
    }
  ) |> unlist() |> cat(sep = '\n')

cat(":::\n")
```

```{r}
#| eval: !expr is_inter
#| echo: false

paste0("- ", summary(cont_inter) |> attr("mesg")) |> cat(sep = "\n")
```

<!---------------------------------------------------------->

```{r}
#| eval: !expr (!is_inter)
#| echo: false
#| output: asis

cat("❖ **Boxplot:**")
```

```{r}
#| eval: !expr (!is_inter)
#| echo: false

boxplot <- make_signif_boxplot(mod, xaxis = pred, method = "consec")

if (toupper(pred) != "CONDITION") boxplot <- boxplot + scale_color_viridis_d() + scale_fill_viridis_d()
```

```{r}
#| eval: !expr (!is_inter)
#| echo: false
#| output: asis
#| fig.width: !expr plot_width
#| fig.height: !expr (4 + plot_width/3)

boxplot
```

<!--[ For interactions ]--->

```{r}
#| eval: !expr is_inter
#| echo: false
#| output: asis

cat("❖ **Temporal plot:**")
```

```{r}
#| eval: !expr is_inter
#| echo: false
#| output: asis
#| fig.width: !expr (4 + plot_width/3)
#| fig.height: 9

modeled_temporal_plot(mod, time = time)
```
